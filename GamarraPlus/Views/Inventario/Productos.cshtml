@model IEnumerable<GamarraPlus.Models.Producto>

@{
    ViewData["Title"] = "Productos";
    int page = ViewBag.Page ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
}


<head>
    <link rel="stylesheet" href="~/css/tables.css">
    <link rel="stylesheet" href="~/css/forms.css">
    <script src="https://kit.fontawesome.com/4dd764bfea.js" crossorigin="anonymous"></script>
</head>

<main>

    <p class="crear-btn">
        <button class="btn btn-primary" onclick="openCreateModal()">Crear Nuevo</button>
    </p>


    <div class="wrapper">
        <table class="tabla">
            <caption>Productos</caption>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>CÓDIGO</th>
                    <th>DESCRIPCIÓN</th>
                    <th>CATEGORÍA</th>
                    <th>PRECIO COMPRA</th>
                    <th>PRECIO VENTA</th>
                    <th>STOCK</th>
                    <th>IMAGEN</th>
                    <th>ACCIONES</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td data-cell="id">@Html.DisplayFor(modelItem => item.IdProducto)</td>
                        <td data-cell="código">@Html.DisplayFor(modelItem => item.Codigo)</td>
                        <td data-cell="descripción">@Html.DisplayFor(modelItem => item.Descripcion)</td>
                        <td data-cell="categoría">@Html.DisplayFor(modelItem => item.oCategoria.Descripcion)</td>
                        <td data-cell="Precio Compra">@Html.DisplayFor(modelItem => item.PrecioCompra)</td>
                        <td data-cell="Precio Venta">@Html.DisplayFor(modelItem => item.PrecioVenta)</td>
                        <td data-cell="stock">@Html.DisplayFor(modelItem => item.Stock)</td>
                        <td data-cell="imagen de muestra">
                            <img src="@item.RutaImagen" class="imagen-producto" />
                        </td>
                        <td data-cell="acciones">
                            <div class="acciones-btns">
                                <a class="btnEditar btn-primary" onclick="openEditModal('@item.IdProducto', '@item.Codigo', '@item.Descripcion', '@item.PrecioCompra', '@item.PrecioVenta', '@item.Stock', '@item.oCategoria.Descripcion')">EDITAR</a>
                                <button class="btnEliminar btn-danger" onclick="confirmDelete('@item.IdProducto', '@item.Descripcion')">DELETE</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</main>

<div class="modal fade" id="modalEditar" tabindex="-1" aria-labelledby="modalEditarLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="container d-flex justify-content-center align-items-center min-vh-100">
                    <div class="row border rounded-5 p-3 bg-white shadow box-area">
                        <div class="col-md-6 rounded-4 d-flex justify-content-center align-items-center flex-column left-box" style="position: relative; background: #4c9be8;">
                            <div class="background-overlay saturar producto-editar"></div>
                            <div class="content-container">
                                <div class="featured-image mb-3">
                                    <i class="fa-solid fa-truck-moving"></i>
                                </div>
                                <p class="text-white fs-2" style="font-family: 'Courier New', Courier, monospace; font-weight: 600;">
                                    Editar Producto
                                </p>
                                <small class="text-white text-wrap text-center" style="width: 17rem;font-family: 'Courier New', Courier, monospace;">Gamarra+</small>
                            </div>
                        </div>


                        <div class="col-md-6 right-box">
                            <div class="row align-items-center">
                                <div class="header-text mb-4">
                                    <h2>Editar Producto</h2>
                                </div>
                                <form id="formEditarProducto">
                                    <div class="mb-3">
                                        <label for="inputCodigo" class="form-label">Código</label>
                                        <input type="text" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputCodigo" name="codigo" placeholder="Nuevo código">
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputDescripcion" class="form-label">Descripción</label>
                                        <input type="text" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputDescripcion" name="descripcion" placeholder="Nueva descripción">
                                    </div>
                                    <div class="mb-3">
                                        <label for="selectCategoria" class="form-label">Categoría</label>
                                        <select class="form-control form-control-lg bg-light mt-3 fs-7" id="selectCategoria" name="categoria">
                                            @foreach (var categoria in ViewBag.Categorias)
                                            {
                                                <option value="@categoria.IdCategoria">@categoria.Descripcion</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputPrecioCompra" class="form-label">Precio de compra</label>
                                        <input type="number" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputPrecioCompra" name="precioCompra" placeholder="Nuevo precio de compra">
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputPrecioVenta" class="form-label">Precio de venta</label>
                                        <input type="number" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputPrecioVenta" name="precioVenta" placeholder="Nuevo precio de venta">
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputStock" class="form-label">Stock</label>
                                        <input type="number" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputStock" name="stock" placeholder="Nuevo stock">
                                    </div>


                                    <div class="mb-3">
                                        <label class="control-label">Archivo</label>
                                        <div class="custom-file" id="NombreArchivos">
                                            <input type="file" class="custom-file-input" id="filess" onchange="getArchivoOnChanges()" />

                                            <label class="custom-file-label" id="lblFiles">Adjuntar...</label>
                                        </div>
                                    </div>

                                    <input type="hidden" id="inputIdProducto" name="idProducto">

                                </form>
                            </div>
                            <div class="modal-footer mt-4">
                                <button type="button" class="btn-accion btn-lg btn-primary mx-2" onclick="EditarProducto()">Guardar</button>
                                <button type="button" class="btn-accion btn-lg btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="modalCrear" tabindex="-1" aria-labelledby="modalCrearProductoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="container d-flex justify-content-center align-items-center min-vh-100">
                    <div class="row border rounded-5 p-3 bg-white shadow box-area">
                        <div class="col-md-6 rounded-4 d-flex justify-content-center align-items-center flex-column left-box" style="position: relative; background: #4c9be8;">
                            <div class="background-overlay saturar producto-crear"></div>
                            <div class="content-container">
                                <div class="featured-image mb-3">
                                    <i class="fa-solid fa-truck-moving"></i>
                                </div>
                                <p class="text-white fs-2" style="font-family: 'Courier New', Courier, monospace; font-weight: 600;">
                                    Crear Nuevo Producto
                                </p>
                                <small class="text-white text-wrap text-center" style="width: 17rem; font-family: 'Courier New', Courier, monospace;">Gamarra+</small>
                            </div>
                        </div>


                        <div class="col-md-6 right-box">
                            <div class="row align-items-center">
                                <div class="header-text mb-4">
                                    <h2>Crear Producto</h2>
                                </div>
                                <form id="formCrearProducto">
                                    <div class="mb-3">
                                        <label for="inputNuevoCodigo" class="form-label">Código</label>
                                        <input type="text" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputNuevoCodigo" name="nuevoCodigo" placeholder="Nuevo código">
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputNuevaDescripcion" class="form-label">Descripción</label>
                                        <input type="text" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputNuevaDescripcion" name="nuevaDescripcion" placeholder="Nueva descripción">
                                    </div>
                                    <div class="mb-3">
                                        <label for="selectNuevaCategoria" class="form-label">Categoría</label>

                                        <select class="form-control form-control-lg bg-light mt-3 fs-7" id="selectNuevaCategoria" name="idCategoria">
                                            <option value="">Nueva Categoría</option> <!-- Placeholder -->
                                            @foreach (var categoria in ViewBag.Categorias)
                                            {
                                                <option value="@categoria.IdCategoria">@categoria.Descripcion</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputNuevoPrecioCompra" class="form-label">Precio de compra</label>
                                        <input type="number" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputNuevoPrecioCompra" name="nuevoPrecioCompra" placeholder="Nuevo precio de compra">
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputNuevoPrecioVenta" class="form-label">Precio de venta</label>
                                        <input type="number" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputNuevoPrecioVenta" name="nuevoPrecioVenta" placeholder="Nuevo precio de venta">
                                    </div>
                                    <div class="mb-3">
                                        <label for="inputNuevoStock" class="form-label">Stock</label>
                                        <input type="number" class="form-control form-control-lg bg-light mt-3 fs-7" id="inputNuevoStock" name="nuevoStock" placeholder="Nuevo stock">
                                    </div>

                                    <div class="mb-3">
                                        <label class="control-label">Archivo</label>
                                        <div class="custom-file" id="NombreArchivo">
                                            <input type="file" class="custom-file-input" id="files" onchange="getArchivoOnChange()" />

                                            <label class="custom-file-label" id="lblFile">Adjuntar...</label>
                                        </div>
                                    </div>

                                </form>
                            </div>
                            <div class="modal-footer mt-4">
                                <button type="button" class="btn-accion btn-lg btn-primary mx-2" onclick="CrearProducto()">Crear</button>
                                <button type="button" class="btn-accion btn-lg btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var imagenes = document.querySelectorAll(".imagen-producto");
        imagenes.forEach(function (imagen) {
            var rutaImagen = imagen.getAttribute("src");
            imagen.setAttribute("src", rutaImagen);
        });
    });
</script>

<script>
    var categorias = @Json.Serialize(ViewBag.Categorias);

    var selectNuevaCategoria = document.getElementById('selectNuevaCategoria');

    categorias.forEach(function (categoria) {
        var option = document.createElement('option');
        option.value = categoria.Value;
        option.textContent = categoria.Text;
        selectNuevaCategoria.appendChild(option);
    });
</script>

<script>
    function confirmDelete(idProducto, descripcion) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: `Estás a punto de eliminar el producto con ID ${idProducto} (${descripcion}). ¡Esta acción no se puede deshacer!`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: '¡Sí, bórralo!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                deleteProducto(idProducto);
            }
        });
    }

    async function deleteProducto(idProducto) {
        try {
            const response = await fetch(`/Inventario/EliminarProducto?idProducto=${idProducto}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                Swal.fire({
                    title: '¡Eliminado!',
                    text: 'El producto ha sido eliminado.',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 2000
                });

                setTimeout(() => {
                    location.reload();
                }, 2000);
            } else {
                throw new Error('¡No se pudo eliminar el producto!');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || '¡No se pudo eliminar el producto!'
            });
        }
    }

    function openEditModal(idProducto, codigo, descripcion, precioCompra, precioVenta, stock, categoria) {
        $('#inputIdProducto').val(idProducto);
        $('#inputCodigo').val(codigo);
        $('#inputDescripcion').val(descripcion);
        $('#inputPrecioCompra').val(precioCompra);
        $('#inputPrecioVenta').val(precioVenta);
        $('#inputStock').val(stock);

        $('#selectCategoria').val(categoria);

        $('#selectCategoria option').filter(function () {
            return $(this).text() === categoria;
        }).prop('selected', true);
        $('#files').val('');


        $('#modalEditarLabel').text('Edit Product');
        $('#modalEditar').modal('show');
    }


    function getArchivoOnChanges() {

        debugger;
        let file = document.getElementById('filess').files[0];

        $('#lblFiles').text(file.name)
    }



    async function EditarProducto() {
        var idProducto = $('#inputIdProducto').val();
        var nuevoCodigo = $('#inputCodigo').val();
        var nuevaDescripcion = $('#inputDescripcion').val();
        var nuevoPrecioCompra = $('#inputPrecioCompra').val();
        var nuevoPrecioVenta = $('#inputPrecioVenta').val();

        var fileInput = document.getElementById('filess');
        var fileName = fileInput.files[0].name;

        var rutaCarpeta = "/Productos/";

        var rutaCompleta = rutaCarpeta + fileName;

        var nuevoStock = $('#inputStock').val();
        var categoria = $('#selectCategoria').val();

        try {
            const response = await fetch(`/Inventario/ActualizarProducto`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    idProducto: idProducto,
                    codigo: nuevoCodigo,
                    descripcion: nuevaDescripcion,
                    precioCompra: nuevoPrecioCompra,
                    precioVenta: nuevoPrecioVenta,
                    RutaImagen: rutaCompleta, 

                    stock: nuevoStock,
                    oCategoria: {
                        IdCategoria: categoria,
                        Descripcion: $('#selectNuevaCategoria option:selected').text()
                    }
                })
            });

            if (response.ok) {
                Swal.fire({
                    title: '¡Editado!',
                    text: 'El producto ha sido actualizado.',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 2000
                });

                setTimeout(() => {
                    location.reload();
                }, 2000);
            } else {
                throw new Error('¡No se pudo guardar el producto!');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || '¡No se pudo guardar el producto!'
            });
        }
    }


</script>

<script>

    function getArchivoOnChange() {
        debugger;
        let file = document.getElementById('files').files[0];
        $('#lblFile').text(file.name);
    }

    function openCreateModal() {
        debugger;
        $('#inputNuevoCodigo').val('');
        $('#inputNuevaDescripcion').val('');
        $('#inputNuevoPrecioCompra').val('');
        $('#inputNuevoPrecioVenta').val('');
        $('#inputNuevoStock').val('');
        $('#selectNuevaCategoria').val('');
        $('#files').val('');

        $('#modalCrearLabel').text('Crear Nuevo Producto');
        $('#modalCrear').modal('show');
    }

    async function CrearProducto() {
        debugger;
        var nuevoCodigo = $('#inputNuevoCodigo').val();
        var nuevaDescripcion = $('#inputNuevaDescripcion').val();
        var nuevoPrecioCompra = $('#inputNuevoPrecioCompra').val();
        var nuevoPrecioVenta = $('#inputNuevoPrecioVenta').val();
        var nuevoStock = $('#inputNuevoStock').val();
        var idCategoria = $('#selectNuevaCategoria').val();
        var fileInput = document.getElementById('files');
        var fileName = fileInput.files[0] ? fileInput.files[0].name : '';

        try {
            var rutaCarpeta = "/Productos/";
            var rutaCompleta = rutaCarpeta + fileName;

            const formData = new FormData();
            formData.append('Codigo', nuevoCodigo);
            formData.append('Descripcion', nuevaDescripcion);
            formData.append('PrecioCompra', nuevoPrecioCompra);
            formData.append('PrecioVenta', nuevoPrecioVenta);
            formData.append('Stock', nuevoStock);
            formData.append('oCategoria.IdCategoria', idCategoria);
            formData.append('archivo', fileInput.files[0]);

            const response = await fetch(`/Inventario/GuardarProducto`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Codigo: nuevoCodigo,
                    Descripcion: nuevaDescripcion,
                    PrecioCompra: nuevoPrecioCompra,
                    PrecioVenta: nuevoPrecioVenta,
                    RutaImagen: rutaCompleta, 
                    Stock: nuevoStock,
                    oCategoria: {
                        IdCategoria: idCategoria,
                        Descripcion: $('#selectNuevaCategoria option:selected').text()
                    }
                })
            });

            if (response.ok) {
                Swal.fire({
                    title: '¡Creado!',
                    text: 'El producto ha sido creado.',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 2000
                });

                setTimeout(() => {
                    location.reload();
                }, 2000);
            } else {
                throw new Error('¡No se pudo crear el producto!');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || '¡No se pudo crear el producto!'
            });
        }
    }

</script>




