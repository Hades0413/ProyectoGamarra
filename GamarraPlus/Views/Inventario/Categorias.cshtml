@model IEnumerable<GamarraPlus.Models.Categoria>

@{
    ViewData["Title"] = "Categorias";
}

<style>
    .container-categoria {
        display: flex;
        justify-content: center;
    }

    .table-wrapper {
        width: 100%;
        overflow-x: auto;
    }

    .tabla > :not(:first-child) {
        border-top: 0px;
    }

    .tabla {/*
            width: 100%;*/
        border-collapse: collapse;
        border: 1px solid #000;
        font-family: 'Roboto', sans-serif;
        font-size: 1.8rem;
        
    }

        .tabla th, .tabla td {
            padding: 10px;
            border: 1px solid #000; /* Añade bordes a las celdas */
            width: 400px;
            text-align: center;
        }

        .tabla th {
            background-color: #000;
            color: #fff;
        }

        .tabla td {
            color: #333;
        }

    .btnEditar, .btnEliminar {
        display: inline-block;
        padding: 8px 12px;
        margin: 4px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        text-decoration: none;
        text-align: center;
        font-size: 14px;
    }

    .btnEditar {
        background-color: #007bff;
        color: #fff;
    }

    .btnEliminar {
        background-color: #dc3545;
        color: #fff;
    }

    .btn:hover {
        opacity: 0.8;
    }

</style>

<h1>Categorias</h1>

<p>
    <button class="btn btn-primary" onclick="openCreateModal()">Create New</button>
</p>

<div class="container-categoria">

    <table class="tabla">
        <thead>
            <tr>
                <th>ID</th>
                <th>DESCRIPCIÓN</th>
                <th>ACCIONES</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.IdCategoria)</td>
                    <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                    <td>
                        <a class="btnEditar btn-primary" onclick="openEditModal('@item.IdCategoria', '@item.Descripcion')">EDITAR</a>
                        <button class="btnEliminar btn-danger" onclick="confirmDelete('@item.IdCategoria', '@item.Descripcion')">DELETE</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

<div class="modal fade" id="modalEditar" tabindex="-1" aria-labelledby="modalEditarLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalEditarLabel">Editar Categoria</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formEditarCategoria">
                    <div class="mb-3">
                        <label for="inputDescripcion" class="form-label">Descripción</label>
                        <input type="text" class="form-control" id="inputDescripcion" name="descripcion">
                    </div>
                    <input type="hidden" id="inputIdCategoria" name="idCategoria">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="EditarCategoria()">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalCrear" tabindex="-1" aria-labelledby="modalCrearLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalCrearLabel">Crear nueva Categoría</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formCrearCategoria">
                    <div class="mb-3">
                        <label for="inputNuevaDescripcion" class="form-label">Descripción</label>
                        <input type="text" class="form-control" id="inputNuevaDescripcion" name="nuevaDescripcion">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="CrearCategoria()">Create</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmDelete(idCategoria, descripcion) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: `Estás a punto de eliminar la categoría con ID. ${idCategoria} (${descripcion}). ¡Esta acción no se puede deshacer!`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: '¡Sí, bórralo!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                deleteCategoria(idCategoria);
            }
        });
    }

    async function deleteCategoria(idCategoria) {
        try {
            const response = await fetch(`/Inventario/EliminarCategoria?idCategoria=${idCategoria}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                Swal.fire({
                    title: '¡Eliminada!',
                    text: 'La categoría ha sido eliminada.',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error('¡No se pudo eliminar la categoría!');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || '¡No se pudo eliminar la categoría!'
            });
        }
    }

    function openCreateModal() {
        $('#inputNuevaDescripcion').val('');
        $('#modalCrearLabel').text('Crear nueva Categoría');
        $('#modalCrear').modal('show');
    }

    async function CrearCategoria() {
        var nuevaDescripcion = $('#inputNuevaDescripcion').val();

        try {
            const response = await fetch(`/Inventario/GuardarCategoria`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    descripcion: nuevaDescripcion
                })
            });

            if (response.ok) {
                Swal.fire({
                    title: '¡Creada!',
                    text: 'La categoría ha sido creada.',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error('¡No se pudo crear la categoría!');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || '¡No se pudo crear la categoría!'
            });
        }
    }

    function openEditModal(idCategoria, descripcion) {
        $('#inputIdCategoria').val(idCategoria);
        $('#inputDescripcion').val(descripcion);
        $('#modalEditarLabel').text('Editar Categoria');
        $('#modalEditar').modal('show');
    }

    async function EditarCategoria() {
        var idCategoria = $('#inputIdCategoria').val();
        var nuevaDescripcion = $('#inputDescripcion').val();

        try {
            const response = await fetch(`/Inventario/ActualizarCategoria`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    idCategoria: idCategoria,
                    descripcion: nuevaDescripcion
                })
            });

            if (response.ok) {
                Swal.fire({
                    title: '¡Editado!',
                    text: 'La categoría ha sido actualizada.',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error('¡No se pudo editar la categoría!');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || '¡No se pudo editar la categoría!'
            });
        }
    }
</script>
